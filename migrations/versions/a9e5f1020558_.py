"""empty message

Revision ID: a9e5f1020558
Revises:
Create Date: 2018-04-11 15:54:09.824368

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9e5f1020558'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('firstname', sa.String(
                        length=80), nullable=False),
                    sa.Column('lastname', sa.String(
                        length=80), nullable=False),
                    sa.Column('email', sa.String(length=120), nullable=True),
                    sa.Column('mobile', sa.String(length=120), nullable=True),
                    sa.Column('gender', sa.String(length=10), nullable=False),
                    sa.Column('profession', sa.String(
                        length=10), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('mobile')
                    )
    op.create_table('events',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=80), nullable=False),
                    sa.Column('description', sa.String(
                        length=80), nullable=False),
                    sa.Column('start_date', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('end_date', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('token', sa.String(length=10), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('group_answers',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('question_group_id',
                              sa.Integer(), nullable=False),
                    sa.Column('answer', sa.String(length=80), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('questions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('question', sa.String(
                        length=80), nullable=False),
                    sa.Column('question_type', sa.String(
                        length=80), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('question_group',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('question_id', sa.Integer(), nullable=True),
                    sa.Column('name', sa.String(length=80), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['question_id'], ['questions.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('sessions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('event_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('start_date', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('answers',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('session_id', sa.Integer(), nullable=True),
                    sa.Column('question_id', sa.Integer(), nullable=True),
                    sa.Column('answer', sa.String(length=80), nullable=False),
                    sa.Column('created_at', sa.DateTime(),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['question_id'], ['questions.id'], ),
                    sa.ForeignKeyConstraint(['session_id'], ['sessions.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('answers')
    op.drop_table('sessions')
    op.drop_table('question_group')
    op.drop_table('questions')
    op.drop_table('group_answers')
    op.drop_table('events')
    op.drop_table('users')
    # ### end Alembic commands ###
